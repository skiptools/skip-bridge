build:
  contents:
    # the location of the skipstone derived Swift package
    - 'val swiftPath = "src/main/swift"'
    - 'var swiftBuildConfig = "debug"'

    - block: 'android'
      contents:
        - block: 'buildTypes'
          contents:
            - block: 'release'
              contents:
                - 'swiftBuildConfig = "release"'
            - block: 'debug'
              contents:
                - 'swiftBuildConfig = "debug"'

    - block: 'tasks.withType<org.gradle.api.tasks.compile.AbstractCompile>'
      contents:
        - block: 'if (file(swiftPath).exists())'
          contents:
            - 'dependsOn("buildAndroidSwiftPackage")'

    - block: 'tasks.register("buildAndroidSwiftPackage")'
      contents:
        - block: 'doLast'
          contents:
            # Output the environment (for debugging)
            - 'System.getenv().toSortedMap().forEach { key, value -> println("${key}=\"${value}\"") }'
            - block: 'exec'
              contents:
                - 'commandLine("sh", "-c", "skip android build -d .build/jni-libs --package-path ${swiftPath} --configuration ${swiftBuildConfig} --product ${project.name} --arch aarch64 --arch x86_64")'
                - 'environment("SKIP_PLUGIN_DISABLED", "1")'
                - 'environment("SKIP_JNI_MODE", "1")'
                # when we are running tests, insert the local build path for the local skipstone command
                - 'environment("PATH", (System.getenv()["XCTestBundlePath"] + "/..") + ":" + System.getenv()["PATH"])'

    # For test cases, we compile locally with `swift build` against the derived Swift project
    - block: 'tasks.withType<Test>'
      contents:
        - block: 'if (file(swiftPath).exists())'
          contents:
            - 'dependsOn("buildLocalSwiftPackage")'

    - block: 'tasks.register("buildLocalSwiftPackage")'
      contents:
        - block: 'doLast'
          contents:
            # Output the environment (for debugging)
            - 'System.getenv().toSortedMap().forEach { key, value -> println("${key}=\"${value}\"") }'
            - block: 'exec'
              contents:
                # build for local macOS in order to run tests
                - 'commandLine("sh", "-c", "swift build --package-path ${swiftPath} --configuration ${swiftBuildConfig} --product ${project.name}")'
                # Do not run the skipstone plugin when building again, because we have already performed transpilation.
                - 'environment("SKIP_PLUGIN_DISABLED", "1")'
                - 'environment("SKIP_JNI_MODE", "1")'

    - block: 'android'
      contents:
        - block: 'sourceSets'
          contents:
            # .build/jni-libs/ is the folder where our toolchain outputs the natively-compiled .so files
            - 'getByName("main").jniLibs.srcDirs(".build/jni-libs")'
        - block: 'packaging'
          contents:
            - block: 'jniLibs'
              contents:
                # doNotStrip is needed to prevent errors like: java.lang.UnsatisfiedLinkError: dlopen failed: empty/missing DT_HASH/DT_GNU_HASH in "/data/app/~~Zoepnr93K9vyUtTUUM0POg==/skip.bridge.samples.test-3nePwd6ioGZtLQ0K0EJpBQ==/base.apk!/lib/arm64-v8a/libdispatch.so" (new hash type from the future?) (see: https://github.com/finagolfin/swift-android-sdk/issues/67)
                # also seems to affect libandroid-spawn.so
                - 'keepDebugSymbols.add("**/*.so")'
                - 'pickFirsts.add("**/*.so")'
